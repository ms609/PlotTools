[{"path":"https://ms609.github.io/PlotTools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martin R. Smith. Author, maintainer, copyright holder.","code":""},{"path":"https://ms609.github.io/PlotTools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Smith (2023). PlotTools: Add continuous legends plots. Comprehensive R Archive Network, doi: 10.5281/zenodo.7803390","code":"@Article{Smith2023,   journal = {Comprehensive R Archive Network},   author = {Martin R. Smith},   title = {PlotTools: Add continuous legends to plots},   year = {2023},   doi = {10.5281/zenodo.7803390}, }"},{"path":"https://ms609.github.io/PlotTools/index.html","id":"plottools","dir":"","previous_headings":"","what":"Add Continuous Legends to Plots","title":"Add Continuous Legends to Plots","text":"‘PlotTools’ R package allows legends continuous variables added plots using familiar functions default ‘graphics’ package. also includes utility functions manipulate irregular polygons locate centres. Install latest production version CRAN using install development version GitHub Please let know feature requests bugs opening issue GitHub.","code":"install.packages(\"PlotTools\") devtools::install_github(\"ms609/PlotTools\")"},{"path":"https://ms609.github.io/PlotTools/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Add Continuous Legends to Plots","text":"","code":"# Select a colour palette palette <- if (packageVersion(\"grDevices\") > 3.6) hcl.colors else heat.colors  # Plot some example data plot(   cars,   xlab = \"Speed / mph\",   ylab = \"Stopping distance / ft\",   col = palette(125 + 1)[cars$dist + 1], # Colour points by distance   cex = cars$speed / 10,                 # Size points by speed   pch = 16,                              # Use filled circle for points   frame.plot = FALSE )  # Display legend for colour scale PlotTools::SpectrumLegend(   \"topleft\",                             # Legend position   palette = palette,                     # Display our chosen palette   legend = seq(125, 0, length.out = 6),  # Annotate positions on legend   title = \"Distance\",   bty = \"n\"                              # Don't frame with box )  # Display legend for plotting symbol sizes PlotTools::SizeLegend(   \"bottomright\",                         # Legend position   palette = \"darkgrey\",                  # Set colour - may be continuous   horiz = TRUE,                          # Orient horizontally   width = c(0, 2.5), scale = \"pch\",      # Scale for plotting character   legend = seq(0, 25, by = 5),           # Annotate positions on legend   x.intersp = 0,                         # Set x spacing   bty = \"n\",                             # Don't frame with box   inset = 0.05,                          # Inset from plot edges   title = \"Speed\" )"},{"path":"https://ms609.github.io/PlotTools/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Add Continuous Legends to Plots","text":"Cite package : Smith, Martin R. (2023). PlotTools: Add continuous legends plots. Comprehensive R Archive Network, doi:10.5281/zenodo.7803390.","code":""},{"path":"https://ms609.github.io/PlotTools/index.html","id":"contribute","dir":"","previous_headings":"","what":"Contribute","title":"Add Continuous Legends to Plots","text":"Please note ‘PlotTools’ project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://ms609.github.io/PlotTools/reference/Col2Hex.html","id":null,"dir":"Reference","previous_headings":"","what":"Colour to hexadecimal conversion — Col2Hex","title":"Colour to hexadecimal conversion — Col2Hex","text":"Convert R colour hexadecimal representation.","code":""},{"path":"https://ms609.github.io/PlotTools/reference/Col2Hex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Colour to hexadecimal conversion — Col2Hex","text":"","code":"Col2Hex(col, alpha = FALSE)"},{"path":"https://ms609.github.io/PlotTools/reference/Col2Hex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Colour to hexadecimal conversion — Col2Hex","text":"col vector three kinds R color specifications,     .e., either color name (listed colors()),     hexadecimal string (see Details),     positive integer meaning palette()[]. alpha logical value indicating whether alpha channel (opacity)     values returned.","code":""},{"path":"https://ms609.github.io/PlotTools/reference/Col2Hex.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Colour to hexadecimal conversion — Col2Hex","text":"Martin R. Smith (martin.smith@durham.ac.uk)","code":""},{"path":"https://ms609.github.io/PlotTools/reference/Col2Hex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Colour to hexadecimal conversion — Col2Hex","text":"","code":"Col2Hex(1:3) #> [1] \"#000000\" \"#DF536B\" \"#61D04F\" Col2Hex(c(\"peachpuff\", \"blue\"), TRUE) #> [1] \"#FFDAB9FF\" \"#0000FFFF\""},{"path":"https://ms609.github.io/PlotTools/reference/PlotTools-package.html","id":null,"dir":"Reference","previous_headings":"","what":"PlotTools — PlotTools-package","title":"PlotTools — PlotTools-package","text":"\"PlotTools\" R package allows legends continuous variables added plots using familiar functions default 'graphics' package.  also includes utility functions manipulate irregular polygons locate centres.","code":""},{"path":"https://ms609.github.io/PlotTools/reference/PlotTools-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PlotTools — PlotTools-package","text":"Full documentation available online.","code":""},{"path":[]},{"path":"https://ms609.github.io/PlotTools/reference/PlotTools-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"PlotTools — PlotTools-package","text":"Maintainer: Martin R. Smith martin.smith@durham.ac.uk (ORCID) [copyright holder]","code":""},{"path":"https://ms609.github.io/PlotTools/reference/Polygon-Geometry.html","id":null,"dir":"Reference","previous_headings":"","what":"Polygon geometry — Polygon-Geometry","title":"Polygon geometry — Polygon-Geometry","text":"Geometry functions irregular polygons.","code":""},{"path":"https://ms609.github.io/PlotTools/reference/Polygon-Geometry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polygon geometry — Polygon-Geometry","text":"","code":"PolygonArea(x, y = NULL, positive = TRUE)  PolygonCentre(x, y = NULL)  PolygonCenter(x, y = NULL)  GrowPolygon(x, y = NULL, buffer = 0)"},{"path":"https://ms609.github.io/PlotTools/reference/Polygon-Geometry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Polygon geometry — Polygon-Geometry","text":"x, y Vectors containing coordinates vertices polygon. positive vertices specified anticlockwise direction, polygon treated hole, negative area, unless positive set TRUE. Vertices specified clockwise sequence always yield positive area. buffer Numeric specifying distance grow polygon.","code":""},{"path":"https://ms609.github.io/PlotTools/reference/Polygon-Geometry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Polygon geometry — Polygon-Geometry","text":"PolygonArea() returns area specified polygon. PolygonCentre() returns single-row matrix containing x y coordinates geometric centre polygon. GrowPolygon() returns coordinates vertices polygon moving vertex buffer away polygon's centre.","code":""},{"path":"https://ms609.github.io/PlotTools/reference/Polygon-Geometry.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Polygon geometry — Polygon-Geometry","text":"PolygonArea(): Calculate area irregular polygon PolygonCentre(): Locate centre polygon GrowPolygon(): Enlarge polygon directions","code":""},{"path":"https://ms609.github.io/PlotTools/reference/Polygon-Geometry.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Polygon geometry — Polygon-Geometry","text":"Martin R. Smith (martin.smith@durham.ac.uk)","code":""},{"path":"https://ms609.github.io/PlotTools/reference/Polygon-Geometry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Polygon geometry — Polygon-Geometry","text":"","code":"x <- c(-3, -1, 6, 3, -4) y <- c(-2, 4, 1, 10, 9) plot(x, y, frame.plot = FALSE) polygon(x, y) PolygonArea(x, y) #> [1] 60 points(PolygonCentre(x, y), pch = 3, cex = 2) polygon(GrowPolygon(x, y, 1), border = \"darkgreen\",         xpd = NA # Allow drawing beyond plot border        )  # Negative values shrink the polygon polygon(GrowPolygon(x, y, -1), border = \"red\")"},{"path":"https://ms609.github.io/PlotTools/reference/SpectrumLegend.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a legend for continuous gradient scales — SpectrumLegend","title":"Produce a legend for continuous gradient scales — SpectrumLegend","text":"Prints annotated vertical bar coloured according continuous palette.","code":""},{"path":"https://ms609.github.io/PlotTools/reference/SpectrumLegend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a legend for continuous gradient scales — SpectrumLegend","text":"","code":"SpectrumLegend(   x = \"topright\",   ...,   palette,   legend,   lty = 1,   lwd = 4,   bty = \"o\",   adj = if (horiz) c(0.5, 0.5) else c(0, 0.5),   horiz = FALSE,   lend = \"butt\",   cex = 1,   seg.len = 1 )  SizeLegend(   x = \"topright\",   ...,   legend = character(0),   width = c(0, 1),   palette = par(\"col\"),   scale = c(\"pch\", \"lwd\"),   lty = 0,   lwd = 4,   bty = \"o\",   adj = if (horiz) c(0.5, 0.5) else c(0, 0.5),   horiz = FALSE,   lend = \"butt\",   cex = 1,   seg.len )"},{"path":"https://ms609.github.io/PlotTools/reference/SpectrumLegend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a legend for continuous gradient scales — SpectrumLegend","text":"x, horiz, adj, seg.len, ... Additional parameters legend(). palette Colour palette depict. Specify either vector colours, function palette(n) returns vector n colours. legend Character vector label points palette. Note , vertical legend, values printed top ; use rev() reverse order. lwd, lty, lend Additional parameters segments(), controlling line style.  Use lend = \"butt\" (default) palette semitransparent, avoid artefacts. bty Character specifying type box drawn around legend. allowed values \"o\" (default) \"n\". cex Character expansion factor relative current par(\"cex\"). width Vector length two specifying width legend bar base top. scale Character string specifying whether width = 1 corresponds : \"pch\", size plotting symbol pch = 1; \"lwd\", width line lwd = 1. col Colour used width bar.","code":""},{"path":"https://ms609.github.io/PlotTools/reference/SpectrumLegend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a legend for continuous gradient scales — SpectrumLegend","text":"list, returned invisibly, components: rect list components: w, h: positive numbers giving width height legend's box. left, top: x y coordinates upper left corner box. text: list components x, y, numeric vectors length length(legend), giving x y coordinates legend's text(s).","code":""},{"path":"https://ms609.github.io/PlotTools/reference/SpectrumLegend.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Produce a legend for continuous gradient scales — SpectrumLegend","text":"convenience function yet customizable; file GitHub issue value additional functionality. Note bg parameter specify background colour legend box presently supported vertical legends. use vertical legends, open GitHub issue.","code":""},{"path":"https://ms609.github.io/PlotTools/reference/SpectrumLegend.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Produce a legend for continuous gradient scales — SpectrumLegend","text":"Martin R. Smith (martin.smith@durham.ac.uk)","code":""},{"path":"https://ms609.github.io/PlotTools/reference/SpectrumLegend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce a legend for continuous gradient scales — SpectrumLegend","text":"","code":"plot(0:1, 0:1, type = \"n\", frame.plot = FALSE,      xlab = \"x\", ylab = \"y\")  SpectrumLegend(\"bottomright\", legend = c(\"Bright\", \"Middle\", \"Dark\"),                palette = heat.colors(32L), lwd = 5,                inset = 0.05, # Inset from plot margin                title = \"Brightness\") SpectrumLegend(\"topright\", horiz = TRUE,                legend = seq(1, 9, by = 2), palette = 1:8) SizeLegend(   \"topleft\", inset = 0.05, width = c(0, 2),   title = \"Width\",   legend = c(\"max\", \".\", \".\", \"min\"),   palette = topo.colors, # Associate with a colour scale   y.intersp = 1.5 # Vertical space between labels (also moves title) ) SizeLegend(   \"bottomleft\", horiz = TRUE, width = c(4, 1),   legend = c(\"Thick\", \"Thin\"), palette = \"darkred\",   inset = 0.06 # Make space for the bar.                # A future release may calculate this automatically )"},{"path":"https://ms609.github.io/PlotTools/news/index.html","id":"plottools-v031-2024-08-27","dir":"Changelog","previous_headings":"","what":"PlotTools v0.3.1 (2024-08-27)","title":"PlotTools v0.3.1 (2024-08-27)","text":"SpectrumLegend() supports log scales.","code":""},{"path":"https://ms609.github.io/PlotTools/news/index.html","id":"plottools-v030-2023-10-30","dir":"Changelog","previous_headings":"","what":"PlotTools v0.3.0 (2023-10-30)","title":"PlotTools v0.3.0 (2023-10-30)","text":"CRAN release: 2023-10-30 Col2Hex() converts R colour names hexadecimal codes.","code":""},{"path":"https://ms609.github.io/PlotTools/news/index.html","id":"plottools-v021-2023-09-28","dir":"Changelog","previous_headings":"","what":"PlotTools v0.2.1 (2023-09-28)","title":"PlotTools v0.2.1 (2023-09-28)","text":"CRAN release: 2023-09-28 Default SpectrumLegend(lend = \"butt\") avoid artefacts semi-transparency (#3). Use intuitive argument order SpectrumLegend().","code":""},{"path":"https://ms609.github.io/PlotTools/news/index.html","id":"plottools-v020-2023-05-19","dir":"Changelog","previous_headings":"","what":"PlotTools v0.2.0 (2023-05-19)","title":"PlotTools v0.2.0 (2023-05-19)","text":"CRAN release: 2023-05-19 Add polygon functions, initially “Ternary”","code":""},{"path":"https://ms609.github.io/PlotTools/news/index.html","id":"plottools-v010-2023-04-18","dir":"Changelog","previous_headings":"","what":"PlotTools v0.1.0 (2023-04-18)","title":"PlotTools v0.1.0 (2023-04-18)","text":"CRAN release: 2023-04-18 Initial CRAN release, replacing previous implementation package “TreeTools”. Functions SizeLegend() SpectrumLegend() annotate continuous plotting variables.","code":""}]
